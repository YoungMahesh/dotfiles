# append this line to os generated .bashrc file: source ~/.bashrc-1

# ------------------ fzf -----------------------
ff() {
    local custom_dirs=(~/dotfiles ~/Documents) 
    local dirs=$(
        (find ~/company ~/personal -maxdepth 1 -type d; 
         printf '%s\n' "${custom_dirs[@]}") | 
        fzf
    )
    
    if [ -n "$dirs" ]; then
        cd "$dirs" && clear
    fi
}

# ----------------- bash history ---------------------------
# Set maximum number of commands in memory during a session
HISTSIZE=500
# Set maximum number of commands to save in the history file
HISTFILESIZE=0
# Optional: Ignore duplicate commands and commands starting with space
HISTCONTROL=ignoreboth
# Bind Ctrl+R to fzf history search
__fzf_history__() {
    # 1. Pass through fuzzy finder (fzf) `| fzf --tac --no-sort --exact +m -e`
    #   | pipes the history output to fzf
    #   --tac: Reverses the order (most recent commands first)
    #   --no-sort: Keeps the original order of commands
    #   --exact: Requires exact match when searching
    #   +m: Allow only single selection
    #   -e: Enable exact matching mode
    # 2. Remove line numbers `| awk '{$1=""; print $0}'`
    #   Removes the first field (history line number)
    #   $1="" sets the first field to empty
    #   print $0 prints the entire line (now without the line number)
    # 3. Remove leading whitespace `| sed 's/^ *//'`
    #   Removes leading whitespace from the beginning of the line
    #   s/^ *// is a sed substitution that replaces leading spaces with nothing
    #   Ensures the command starts exactly at the first character
    local selected=$(history | fzf --tac --no-sort --exact +m -e | awk '{$1=""; print $0}' | sed 's/^ *//')
    
    if [ -n "$selected" ]; then
        READLINE_LINE="$selected"
        READLINE_POINT=${#READLINE_LINE}
    fi
}
# Bind the function to Ctrl+R
bind -x '"\C-r": __fzf_history__'


# ------------------- git --------------------
alias gs='git status'
#alias gd='git diff'
#alias gdc='git diff --cached'
alias ga='git add .'
alias gl='git log'
alias gc='git commit -m'
alias gp='git push'


# ---------------------- package installations ------------------------------

# if you have installed vlc through flathub
#alias vlc='flatpak run org.videolan.VLC'

path() {
  # echo "$PATH" outputs the entire PATH string
  # tr ':' '\n' translates (replaces) each colon : with a newline \n
  echo "$PATH" | tr ':' '\n' | fzf
}
clean_path() {
    # Remove duplicates while preserving order
    export PATH=$(echo "$PATH" | tr ':' '\n' | awk '!seen[$0]++' | tr '\n' ':' | sed 's/:$//')
    echo "PATH cleaned and updated."
}

# folder color to orange, only for default terminal [no need in alacritty or kitty]
#export LS_COLORS="$LS_COLORS:di=38;5;208"

# for ansible
#export LC_ALL="en_US.UTF-8"
#export LANG="en_US.UTF-8"

#alias pn='pnpm'

# stripe: cli through docker, --network host tells cli to look network on host computer instead of inside docker-container
#alias stripe='docker run --rm -it --network host stripe/stripe-cli:latest'

export PATH="$PATH:/opt/nvim-linux64/bin"
export EDITOR=nvim
alias vi=nvim


# set PATH so it includes user's private bin if it exists
#PATH="$HOME/bin:$PATH"
# set PATH so it includes user's private bin if it exists
#PATH="$HOME/.local/bin:$PATH"

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

export PATH="$PATH:/home/mahesh/.bun/bin"

alias python=python3
# for python-poetry
export PATH="/home/mahesh/.local/bin:$PATH"
