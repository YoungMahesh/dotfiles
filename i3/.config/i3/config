# reference - https://i3wm.org/docs/userguide.html
# i3 config file (v4)

set $mod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font <font-rendering-engine>:<font-name> <font-size>
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
#exec --no-startup-id dex --autostart --environment i3

# autostart 
# exec: Runs once when i3 starts
# exec_always: Runs every time i3 is restarted/reloaded
# --no-startup-id: Use for apps that don't support startup notifications (prevents cursor from showing loading state)
exec --no-startup-id /home/mahesh/.local/bin/kitty
exec --no-startup-id /snap/bin/telegram-desktop
exec --no-startup-id /usr/bin/anytype

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar


# change focus ; switch window
bindsym $mod+h focus left 
bindsym $mod+l focus right 
bindsym $mod+j focus down 
bindsym $mod+k focus up 

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+l move right
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
#bindsym $mod+h split h

# split in vertical orientation
#bindsym $mod+v split v


# change container layout (stacked, tabbed, toggle split)
# set default layout as tabbed
workspace_layout tabbed
#bindsym $mod+s layout stacking
bindsym $mod+m layout tabbed
bindsym $mod+semicolon layout toggle split
# enter fullscreen mode for the focused container
#bindsym $mod+m fullscreen toggle

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"


# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10


# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
      #status_command i3status
      status_command i3status -c ~/.config/i3status/config
      # [disable mouse scroll](https://github.com/i3/i3/issues/1104#issuecomment-72821524)
      wheel_up_cmd nop
      wheel_down_cmd exec ~/.i3/scripts/custom_wheel_down
}
#bindsym button4 nop
#bindsym button5 exec --no-startup-id ~/.i3/scripts/custom_wheel_down


# ----------- my config --------

# start a terminal
# set preferred terminal
set $term /home/mahesh/.local/kitty/bin/kitty
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec $term 

# launch apps with keybinding
# bluetooth maanger
bindsym $mod+b exec --no-startup-id blueman-manager

bindsym $mod+c exec --no-startup-id gnome-clocks

# start dmenu (a program launcher)
bindsym $mod+f exec --no-startup-id dmenu_run

bindsym $mod+g exec --no-startup-id gnome 

bindsym $mod+n exec --no-startup-id nautilus

bindsym $mod+o exec --no-startup-id obsidian

# kill focused window
bindsym $mod+q kill

# volume manager
bindsym $mod+v exec --no-startup-id pavucontrol

# p = print
bindsym $mod+p exec --no-startup-id flameshot gui 

# suspend
bindsym $mod+z exec --no-startup-id systemctl suspend

bindsym $mod+Shift+z exec systemctl poweroff   
# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# Switch to workspace 2	$mod + 2
# Move focused window to 2	$mod + Shift + 2

# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# switch to workspace
bindsym $mod+1 workspace number $ws1; exec --no-startup-id pgrep kitty || $term
bindsym $mod+2 exec --no-startup-id ~/.config/i3/open_chromium_ws2.sh
#bindsym $mod+3 workspace number $ws3; exec --no-startup-id pgrep -f chromium || /snap/bin/chromium
# we are using count-of-processes because we are getting one process id on `pgrep -f chromium` even when chromium is not running 
#    this happens only on `exec` command of i3-config, to verify you can run `exec pgrep -f chromium > /home/mahesh/output` and check 'output' file
# pgrep gets 13 ids when chromium is running; 1 when it is not running
#bindsym $mod+3 workspace number $ws3; exec --no-startup-id sh -c '[ "$(pgrep -fc chromium)" -lt 5 ] && /snap/bin/chromium'
bindsym $mod+3 exec --no-startup-id ~/.config/i3/open_chromium_ws3.sh
# launch telegram whenever you visit workspace 4
bindsym $mod+4 workspace number $ws4; exec --no-startup-id pgrep telegram || telegram-desktop
#bindsym $mod+5 workspace number $ws5; exec --no-startup-id pgrep remnote > /home/mahesh/rem 
bindsym $mod+5 workspace number $ws5; exec --no-startup-id pgrep remnote || remnote
bindsym $mod+6 workspace number $ws6; exec --no-startup-id pgrep anytype || anytype
#bindsym $mod+7 workspace number $ws7; exec --no-startup-id pgrep obsidian || obsidian
bindsym $mod+7 workspace number $ws7
# if less than 3 processes of gnome are running, execute `gnome`, there are 2 processes when gnome-ui is not running else 4
#bindsym $mod+8 workspace number $ws8; exec --no-startup-id sh -c '[ "$(pgrep -c gnome)" -lt 3 ] && gnome'
bindsym $mod+8 exec --no-startup-id ~/.config/i3/open_chromium_ws8.sh
bindsym $mod+9 exec --no-startup-id ~/.config/i3/open_chromium_ws9.sh
bindsym $mod+0 workspace number $ws10

# how to move to left window, right window

# ------- open app in specific workspace ---------
# get window class of app, execute:
# xprop | grep WM_CLASS
#    xprop is listener
# 2. launch app (if app is not already running)
# 3. click on app window using mouse; this will print window-class under xprop-command in step 1

# assign workspace 4 to Telegram window-class, this will open telegram app in workspace 4 on lauch
assign [class="TelegramDesktop"] 4

assign [class="kitty"] 1
assign [class="firefox_firefox"] 2
#assign [class="Chromium"] 3
assign [class="Brave"] 3
assign [class="RemNote"] 5
assign [class="anytype"] 6
#assign [class="gnome-control-center"] 8
assign [class="Windsurf"] 10
assign [class="Code"] 10
assign [class="obsidian"] 10

# open some apps in fullscreen mode 
# for_window [class=".*"] fullscreen enable   # if you enable fullscreen for all apps then dialog/prompt window will also open as fullscreen
#for_window [class="TelegramDesktop"] fullscreen enable
#for_window [class="RemNote"] fullscreen enable

# Set screen blanking and Display Power Management Signaling (DPMS) timeouts to 1 hour (3600 seconds)
# - 'xset s 3600 3600' sets the screen saver (blanking) timeout and cycle to 1 hour
# - 'xset dpms 3600 3600 3600' sets DPMS (monitor power saving) standby, suspend, and off timeouts to 1 hour each
# restart if you make any changes in xset
exec --no-startup-id xset s 3600 3600
exec --no-startup-id xset dpms 3600 3600 3600


# ------------ installation -------------------------------

# sudo apt install i3
# ❯ i3 --version
# i3 version 4.23 (2023-10-29) © 2009 Michael Stapelberg and contributors

# Log out of your current session.
# On the login screen, click the gear icon or session menu.
# Select i3. -> Log in. 

# On first launch, i3 will prompt you to:
# Generate a default config file (~/.config/i3/config)
# Choose a modifier key (usually Win/Super or Alt)

# use xrandr to manage brightness
# use blueman for bluetooth management
