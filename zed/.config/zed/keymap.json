// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "Workspace",
    "bindings": {
      // "shift shift": "file_finder::Toggle"
    }
  },
  {
    "context": "Editor && vim_mode == insert",
    "bindings": {
      // "j k": "vim::NormalBefore"
    }
  },
  {
    "context": "(VimControl && !menu)",
    "bindings": {
      //";": "vim::ScrollDown",
      // workspace::SendKeystrokes is a Zed action that simulates typing a sequence of
      //    keystrokes into currently focused input (editor, command palette, terminal,
      //    etc). It lets map you a single key or chord to a series of other keypresses
      //    so you can compose behaviors from existing shortcut
      "a": "vim::ScrollUp",
      ";": ["workspace::SendKeystrokes", "ctrl-d z z"],
      "q": "vim::InsertEndOfLine",
      "'": "vim::EndOfLine",
      "space f f": "editor::Format",
      "s s": "workspace::SaveAll",
      "t ;": "pane::CloseActiveItem",
      // "space f v": "project_panel::ToggleFocus",
      "space o": "outline::Toggle"
    }
  },
  {
    "context": "VimControl || Workspace || Editor",
    "bindings": {
      // left-dock, bottom-dock comes under "Workspace"
      // for files: vim normal mode == VimControl ; vim insert mode == Editor
      "ctrl-j": "workspace::ToggleLeftDock",
      "ctrl-l": "workspace::ToggleBottomDock",
      "ctrl-k": "command_palette::Toggle",
      "ctrl-;": "workspace::ToggleRightDock"
    }
  }
]
