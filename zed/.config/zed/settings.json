// documentation: https://zed.dev/docs/configuring-zed
// To see all of Zed's default settings without changing your
// custom settings, run `zed: open default settings` from the command palette
{
  "agent_buffer_font_size": 18.0,
  "agent_ui_font_size": 24.0,
  "ui_font_weight": 400.0,
  "relative_line_numbers": true,
  "git": {
    "inline_blame": {
      "enabled": false
    }
  },
  "agent": {
    "always_allow_tool_actions": true,
    "inline_assistant_model": {
      "provider": "copilot_chat",
      "model": "gpt-5-mini"
    },
    "default_profile": "ask",
    "default_model": {
      "provider": "openrouter",
      "model": "x-ai/grok-code-fast-1"
    },
    "model_parameters": []
  },
  "features": {
    "edit_prediction_provider": "none"
  },
  "autosave": "on_focus_change",
  "telemetry": {
    "diagnostics": false,
    "metrics": false
  },
  "vim_mode": true,
  "icon_theme": "Zed (Default)",
  // above 22 this top and bottom part of popup window (e.g. settings window) get cutoff
  //    from the screen, you cannot see the borders of window, cannot access some options
  "ui_font_size": 22.0,
  "buffer_font_size": 22.0,
  "theme": {
    "mode": "dark",
    "light": "One Light",
    //"dark": "One Dark"
    "dark": "GitHub Dark Default"
  },
  // Settings related to preview tabs.
  "preview_tabs": {
    // Whether preview tabs should be enabled.
    // Preview tabs allow you to open files in preview mode, where they close automatically
    // when you switch to another file unless you explicitly pin them.
    // This is useful for quickly viewing files without cluttering your workspace.
    "enabled": false,
    // Whether to open tabs in preview mode when selected from the file finder.
    "enable_preview_from_file_finder": false,
    // Whether a preview tab gets replaced when code navigation is used to navigate away from the tab.
    "enable_preview_from_code_navigation": false
  }
  // "languages": {
  //   "TypeScript": {
  //     "formatter": {
  //       "external": {
  //         // "command": "npx prettier",
  //         "command": "node_modules/.bin/prettier",
  //         "arguments": ["--stdin-filepath", "{buffer_path}"]
  //       }
  //     }
  //   }
  // }
}
